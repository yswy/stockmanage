<?xml version="1.0" encoding="GB2312"?>

<project name="bopsjczj-dalgen" default="release" basedir="." xmlns:artifact="urn:maven-artifact-ant">
	<!-- define properties -->
	<property environment="env" />
	<property name="name" value="dalgen" />

	<loadproperties srcFile="db.properties" />

	<!-- properties for directory -->
	<property name="dir.conf" value="../temp" />
	<property name="dir.lib" value="../temp" />
	<property name="dir.target" value="../common/dal/target" />
	<property name="dir.deploy" value="../common/dal/src/main" />

	<!-- properties for middlegen plugin -->
	<property name="middlegen.templates" value="templates" />
	<property name="middlegen.destination" value="${dir.deploy}" />
	<property name="middlegen.config.file" value="dal-config.xml" />
	<property name="middlegen.package" value="com.bench.app.stockmanage.common.dal" />
	<property name="middlegen.package.dir" value="com/bench/app/stockmanage/common/dal" />

	<!-- insert database configuration here -->
	<!--mysql-->
	<property name="database.driver.file" value="mysql-connector-java-5.1.31.jar" />
	<property name="database.driver.classpath" value="${database.driver.file}" />
	<property name="database.driver" value="com.mysql.jdbc.Driver" />
	<!--
	<property name="database.driver.file" value="ojdbc14-11.2.0.3.0.jar" />
	<property name="database.driver.classpath" value="${database.driver.file}" />
	<property name="database.driver" value="oracle.jdbc.driver.OracleDriver" />-->

	<!-- classpath -->
	<path id="classpath.main">
		<pathelement path="${dir.conf}" />
		<fileset dir="${dir.lib}">
			<include name="*.jar" />
		</fileset>
	</path>

	<!-- compile middlegen plugin -->
	<target name="compile" depends="" description="">
		<!--
		<mkdir dir="${dir.lib}" />
		<mkdir dir="${dir.conf}" />

		<copy todir="${dir.lib}">
			<fileset dir="${env.MAVEN_HOME_REPOSITORY}/com/bench/gen/bench-gen-dal/1.0">
				<include name="**/*.sar" />
			</fileset>
			<fileset dir="${basedir}">
				<include name="**/*.jar" />
			</fileset>
		</copy>
		<unjar src="${dir.lib}/bench-gen-dal-1.0.sar" dest="${dir.conf}" />
		<copy file="${dir.conf}/middlegen-plugin.xml" todir="${dir.conf}/META-INF" />
		<copy todir="${dir.lib}">
			<fileset dir="${dir.conf}/lib">
				<include name="**/*.jar" />
			</fileset>
		</copy>
		<rename src="${dir.lib}/bench-gen-dal-1.0.sar" dest="${dir.lib}/bench-gen-dal-1.0.jar" />
		-->
	</target>

	<!-- sanity check (database driver must be available) -->
	<target name="check-driver-present">
		<property name="driver.present" value="1" />
		<!--
		<available file="${database.driver.file}" type="file" property="driver.present" />
		-->
	</target>
	<target name="panic-if-driver-not-present" unless="driver.present">
		<fail>
        JDBC驱动程序"${database.driver.file}"不存在。
        </fail>
	</target>

	<!-- =================================================================== -->
	<!-- Run Middlegen                                                       -->
	<!-- =================================================================== -->
	<target name="middlegen" depends="compile,check-driver-present,panic-if-driver-not-present" description="">

		<taskdef name="middlegen" classname="middlegen.MiddlegenTask" classpathref="classpath.main" />
		<echo message="" />
		<input message="正在生成dal，请输入目标表名,多表以逗号分隔,全表生成请输入'*',只生成Sequence请输入'seq': " addproperty="tabs" />

		<echo message="bopsjczj-dal配置文件：${middlegen.config.file}." />
		<echo message="开始自动生成dal..." />

		<mkdir dir="${middlegen.destination}" />
		<middlegen configfile="${middlegen.config.file}" runModel="BENCH" tabs="${tabs}" appname="${name}" databaseurl="${database.url}" driver="${database.driver}" username="${database.userid}" password="${database.password}" schema="${database.schema}" prefsdir="${dir.target}" showTableConfig="false">

			<bench destination="" mergedir="${dir.conf}/templates/mergedir" package="${middlegen.package}">

				<!-- baseDO-->
				<fileproducer destination="${middlegen.destination}/java/${middlegen.package.dir}" template="${dir.conf}/templates/base-do.vm" filename="dataobject/BaseDO.java" />

				<!-- 为每一张表生成一个数据对象类 -->
				<fileproducer destination="${middlegen.destination}/java/${middlegen.package.dir}" template="${dir.conf}/templates/do.vm" filename="dataobject/{0}DO.java" />

				<!-- 生成访问sequence表的DAO接口 -->
				<fileproducer destination="${middlegen.destination}/java/${middlegen.package.dir}" template="${dir.conf}/templates/seq-dao.vm" filename="daointerface/SeqDAO.java" />

				<!-- 生成SequenceDAO的Ibatis实现 -->
				<fileproducer destination="${middlegen.destination}/java/${middlegen.package.dir}" template="${dir.conf}/templates/seq-ibatis.vm" filename="ibatis/IbatisSeqDAO.java" />

				<!-- 为每一张表生成一个DAO接口 -->
				<fileproducer destination="${middlegen.destination}/java/${middlegen.package.dir}" template="${dir.conf}/templates/dao.vm" filename="daointerface/{0}DAO.java" />

				<!-- 为每一张表生成ibatis DAO实现 -->
				<fileproducer destination="${middlegen.destination}/java/${middlegen.package.dir}" template="${dir.conf}/templates/ibatis.vm" filename="ibatis/Ibatis{0}DAO.java" />

				<!-- 为每一张表生成一个sqlmapping文件 -->
				<fileproducer destination="${middlegen.destination}/resources" template="${dir.conf}/templates/table-sqlmap-mapping.vm" filename="sqlmap/{0}-sqlmap-mapping.xml" />

				<!-- 生成公共的sqlmapping文件 -->
				<fileproducer destination="${middlegen.destination}/resources" template="${dir.conf}/templates/common-sqlmap-mapping.vm" filename="sqlmap/common-sqlmap-mapping.xml" />

				<!-- 生成ibatis的配置文件 -->
				<fileproducer destination="${middlegen.destination}/resources" template="${dir.conf}/templates/sqlmap.vm" filename="sqlmap/sqlmap.xml" />

				<!-- 生成DAO beans的Spring配置文件 -->
				<fileproducer destination="${middlegen.destination}/resources/META-INF/spring" template="${dir.conf}/templates/beans-dal-dao.vm" filename="stockmanage-common-dal-dao.xml" />
			</bench>
		</middlegen>
		<echo message="bopsjczj dal生成已成功!" />
	</target>

	<target name="clean-perf" depends="" description="">
		<delete dir="${dir.target}/*.properties" />
	</target>

	<target name="clean-middlegen" depends="" description="">
		<delete dir="${user.home}/.middlegen/lib" />
		<delete dir="${user.home}/.middlegen/conf" />

	</target>

	<target name="clean" depends="clean-perf,clean-middlegen" description="clean all generated stuff" />

	<!-- The default target to use -->
	<target name="release" depends="clean,middlegen" description="" />
</project>
